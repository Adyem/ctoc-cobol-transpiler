char intro_header[40];
char stage_label[16];
char stage_detail[48];
char stage_summary[64];
int module_counter;
int header_length;
int summary_length;

function void main()
{
    std::strcpy(intro_header, "RISK ENGINE MODULES");
    std::strcpy(stage_detail, "Bootstrapping analytics banner");
    display(intro_header);
    display(stage_detail);
    header_length = std::strlen(intro_header);
    display("Header chars");
    display(header_length);

    module_counter = 0;

    std::strcpy(stage_label, "UNDERWRITING");
    std::strcpy(stage_detail, "Policy analytics active");
    display(stage_label);
    display(stage_detail);
    std::strcpy(stage_summary, "UNDERWRITING / Policy analytics active");
    display(stage_summary);
    module_counter = module_counter + 1;

    std::strcpy(stage_label, "CLAIMS");
    std::strcpy(stage_detail, "Claims triage active");
    display(stage_label);
    display(stage_detail);
    std::strcpy(stage_summary, "CLAIMS / Claims triage active");
    display(stage_summary);
    module_counter = module_counter + 1;

    std::strcpy(stage_label, "REPORTING");
    std::strcpy(stage_detail, "Compliance publishing ready");
    display(stage_label);
    display(stage_detail);
    std::strcpy(stage_summary, "REPORTING / Compliance publishing ready");
    display(stage_summary);
    summary_length = std::strlen(stage_summary);
    display("Latest summary length");
    display(summary_length);
    module_counter = module_counter + 1;

    std::strcpy(stage_label, "MODULE COUNT");
    display(stage_label);
    display(module_counter);
    return;
}
