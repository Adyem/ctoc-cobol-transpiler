#include "test_suites.hpp"

int test_transpiler_context_registers_void_function(void);
int test_transpiler_context_registers_value_return_function(void);
int test_transpiler_context_registers_main_entrypoint(void);
int test_transpiler_context_entrypoint_registers_function_signature(void);
int test_transpiler_context_registers_copybook_metadata(void);
int test_transpiler_context_rejects_duplicate_copybook(void);
int test_transpiler_context_argument_mismatch_keeps_entrypoint_clear(void);
int test_transpiler_context_rejects_duplicate_function_registration(void);
int test_transpiler_context_rejects_non_main_entrypoint(void);
int test_transpiler_context_registers_main_without_arguments(void);
int test_transpiler_context_rejects_argument_mismatch(void);
int test_transpiler_context_rejects_non_void_entrypoint(void);
int test_transpiler_context_rejects_duplicate_entrypoint(void);
int test_transpiler_context_allows_private_duplicates(void);
int test_transpiler_context_rejects_public_duplicate_exports(void);
int test_transpiler_context_allows_private_access_within_module(void);
int test_transpiler_context_rejects_private_access_across_modules(void);
int test_transpiler_context_allows_public_access_across_modules(void);
int test_transpiler_context_requires_import_for_cross_module_access(void);
int test_cblc_register_translation_unit_exports_records_entrypoint_and_helpers(void);
int test_cblc_register_translation_unit_exports_skips_entrypoint_without_main(void);
int test_cblc_register_translation_unit_exports_reports_duplicate_entrypoint(void);
int test_transpiler_context_scans_imports_and_orders_modules(void);
int test_transpiler_context_orders_modules_deterministically(void);
int test_transpiler_context_resolves_imports_by_file_name(void);
int test_transpiler_context_rejects_empty_module_name(void);
int test_transpiler_context_rejects_empty_import_path(void);
int test_transpiler_context_deduplicates_module_imports(void);
int test_transpiler_context_sorts_module_imports(void);
int test_transpiler_context_resolves_imports_by_path(void);
int test_transpiler_context_unit_reset_preserves_registered_modules(void);
int test_transpiler_context_preserves_caller_declared_length(void);
int test_transpiler_context_promotes_caller_length_after_callee_metadata(void);
int test_transpiler_context_rejects_narrower_callee_length(void);
int test_transpiler_context_records_read_only_flag(void);
int test_transpiler_context_registers_file_declaration(void);
int test_transpiler_context_tracks_record_length_hint(void);
int test_transpiler_context_records_multiple_io_paths(void);
int test_transpiler_context_rejects_mismatched_io_paths(void);
int test_transpiler_context_records_source_map_entry(void);
int test_transpiler_context_rejects_invalid_source_map_span(void);
int test_transpiler_context_record_comment_stores_metadata(void);
int test_transpiler_context_clear_comments_resets_state(void);
int test_transpiler_context_reset_comment_iteration_rewinds_index(void);
int test_transpiler_context_record_comment_ignores_empty_text(void);
int test_transpiler_context_record_comment_appends_in_order(void);
int test_transpiler_context_record_comment_preserves_emit_index(void);
int test_transpiler_context_record_comment_respects_provided_length(void);
int test_transpiler_context_clear_comments_preserves_allocation(void);
int test_transpiler_context_comment_helpers_accept_null_context(void);
int test_transpiler_context_record_comment_rejects_null_context(void);
int test_transpiler_context_record_comment_allocates_minimum_capacity(void);
int test_transpiler_context_record_comment_expands_capacity_for_additional_entries(void);
int test_transpiler_context_record_comment_retains_entries_after_growth(void);
int test_transpiler_context_record_comment_ignores_null_text(void);
int test_transpiler_context_dispose_clears_comment_storage(void);
int test_transpiler_context_record_comment_accepts_zero_position(void);
int test_transpiler_context_clear_comments_allows_reuse(void);
int test_transpiler_context_record_comment_does_not_reallocate_within_capacity(void);
int test_transpiler_context_record_comment_retains_append_order_with_decreasing_lines(void);
int test_transpiler_context_record_comment_allows_duplicate_positions(void);

const t_test_case *get_transpiler_context_tests(size_t *count)
{
    static const t_test_case tests[] = {
        {"transpiler_context_registers_void_function", test_transpiler_context_registers_void_function},
        {"transpiler_context_registers_value_return_function", test_transpiler_context_registers_value_return_function},
        {"transpiler_context_registers_main_entrypoint", test_transpiler_context_registers_main_entrypoint},
        {"transpiler_context_entrypoint_registers_function_signature", test_transpiler_context_entrypoint_registers_function_signature},
        {"transpiler_context_registers_copybook_metadata", test_transpiler_context_registers_copybook_metadata},
        {"transpiler_context_rejects_duplicate_copybook", test_transpiler_context_rejects_duplicate_copybook},
        {"transpiler_context_argument_mismatch_keeps_entrypoint_clear", test_transpiler_context_argument_mismatch_keeps_entrypoint_clear},
        {"transpiler_context_rejects_duplicate_function_registration", test_transpiler_context_rejects_duplicate_function_registration},
        {"transpiler_context_rejects_non_main_entrypoint", test_transpiler_context_rejects_non_main_entrypoint},
        {"transpiler_context_registers_main_without_arguments", test_transpiler_context_registers_main_without_arguments},
        {"transpiler_context_rejects_argument_mismatch", test_transpiler_context_rejects_argument_mismatch},
        {"transpiler_context_rejects_non_void_entrypoint", test_transpiler_context_rejects_non_void_entrypoint},
        {"transpiler_context_rejects_duplicate_entrypoint", test_transpiler_context_rejects_duplicate_entrypoint},
        {"transpiler_context_allows_private_duplicates", test_transpiler_context_allows_private_duplicates},
        {"transpiler_context_rejects_public_duplicate_exports", test_transpiler_context_rejects_public_duplicate_exports},
        {"transpiler_context_allows_private_access_within_module", test_transpiler_context_allows_private_access_within_module},
        {"transpiler_context_rejects_private_access_across_modules", test_transpiler_context_rejects_private_access_across_modules},
        {"transpiler_context_allows_public_access_across_modules", test_transpiler_context_allows_public_access_across_modules},
        {"transpiler_context_requires_import_for_cross_module_access", test_transpiler_context_requires_import_for_cross_module_access},
        {"cblc_register_translation_unit_exports_records_entrypoint_and_helpers", test_cblc_register_translation_unit_exports_records_entrypoint_and_helpers},
        {"cblc_register_translation_unit_exports_skips_entrypoint_without_main", test_cblc_register_translation_unit_exports_skips_entrypoint_without_main},
        {"cblc_register_translation_unit_exports_reports_duplicate_entrypoint", test_cblc_register_translation_unit_exports_reports_duplicate_entrypoint},
        {"transpiler_context_scans_imports_and_orders_modules", test_transpiler_context_scans_imports_and_orders_modules},
        {"transpiler_context_orders_modules_deterministically", test_transpiler_context_orders_modules_deterministically},
        {"transpiler_context_resolves_imports_by_file_name", test_transpiler_context_resolves_imports_by_file_name},
        {"transpiler_context_rejects_empty_module_name", test_transpiler_context_rejects_empty_module_name},
        {"transpiler_context_rejects_empty_import_path", test_transpiler_context_rejects_empty_import_path},
        {"transpiler_context_deduplicates_module_imports", test_transpiler_context_deduplicates_module_imports},
        {"transpiler_context_sorts_module_imports", test_transpiler_context_sorts_module_imports},
        {"transpiler_context_resolves_imports_by_path", test_transpiler_context_resolves_imports_by_path},
        {"transpiler_context_unit_reset_preserves_registered_modules", test_transpiler_context_unit_reset_preserves_registered_modules},
        {"transpiler_context_preserves_caller_declared_length", test_transpiler_context_preserves_caller_declared_length},
        {"transpiler_context_promotes_caller_length_after_callee_metadata", test_transpiler_context_promotes_caller_length_after_callee_metadata},
        {"transpiler_context_rejects_narrower_callee_length", test_transpiler_context_rejects_narrower_callee_length},
        {"transpiler_context_records_read_only_flag", test_transpiler_context_records_read_only_flag},
        {"transpiler_context_registers_file_declaration", test_transpiler_context_registers_file_declaration},
        {"transpiler_context_tracks_record_length_hint", test_transpiler_context_tracks_record_length_hint},
        {"transpiler_context_records_multiple_io_paths", test_transpiler_context_records_multiple_io_paths},
        {"transpiler_context_rejects_mismatched_io_paths", test_transpiler_context_rejects_mismatched_io_paths},
        {"transpiler_context_records_source_map_entry", test_transpiler_context_records_source_map_entry},
        {"transpiler_context_rejects_invalid_source_map_span", test_transpiler_context_rejects_invalid_source_map_span},
        {"transpiler_context_record_comment_stores_metadata", test_transpiler_context_record_comment_stores_metadata},
        {"transpiler_context_clear_comments_resets_state", test_transpiler_context_clear_comments_resets_state},
        {"transpiler_context_reset_comment_iteration_rewinds_index", test_transpiler_context_reset_comment_iteration_rewinds_index},
        {"transpiler_context_record_comment_ignores_empty_text", test_transpiler_context_record_comment_ignores_empty_text},
        {"transpiler_context_record_comment_appends_in_order", test_transpiler_context_record_comment_appends_in_order},
        {"transpiler_context_record_comment_preserves_emit_index", test_transpiler_context_record_comment_preserves_emit_index},
        {"transpiler_context_record_comment_respects_provided_length", test_transpiler_context_record_comment_respects_provided_length},
        {"transpiler_context_clear_comments_preserves_allocation", test_transpiler_context_clear_comments_preserves_allocation},
        {"transpiler_context_comment_helpers_accept_null_context", test_transpiler_context_comment_helpers_accept_null_context},
        {"transpiler_context_record_comment_rejects_null_context", test_transpiler_context_record_comment_rejects_null_context},
        {"transpiler_context_record_comment_allocates_minimum_capacity", test_transpiler_context_record_comment_allocates_minimum_capacity},
        {"transpiler_context_record_comment_expands_capacity_for_additional_entries", test_transpiler_context_record_comment_expands_capacity_for_additional_entries},
        {"transpiler_context_record_comment_retains_entries_after_growth", test_transpiler_context_record_comment_retains_entries_after_growth},
        {"transpiler_context_record_comment_ignores_null_text", test_transpiler_context_record_comment_ignores_null_text},
        {"transpiler_context_dispose_clears_comment_storage", test_transpiler_context_dispose_clears_comment_storage},
        {"transpiler_context_record_comment_accepts_zero_position", test_transpiler_context_record_comment_accepts_zero_position},
        {"transpiler_context_clear_comments_allows_reuse", test_transpiler_context_clear_comments_allows_reuse},
        {"transpiler_context_record_comment_does_not_reallocate_within_capacity", test_transpiler_context_record_comment_does_not_reallocate_within_capacity},
        {"transpiler_context_record_comment_retains_append_order_with_decreasing_lines", test_transpiler_context_record_comment_retains_append_order_with_decreasing_lines},
        {"transpiler_context_record_comment_allows_duplicate_positions", test_transpiler_context_record_comment_allows_duplicate_positions}
    };

    if (count)
        *count = sizeof(tests) / sizeof(tests[0]);
    return (tests);
}
